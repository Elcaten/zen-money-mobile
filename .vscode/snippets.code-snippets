{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Separator": {
    "scope": "typescript,typescriptreact",
    "prefix": "sep",
    "body": [
      "//====================================================================================================================="
    ]
  },
  "React Functional Component Without Props": {
    "scope": "typescript,typescriptreact",
    "prefix": "rfc",
    "body": [
      "import * as React from 'react'",
      "",
      "export const ${1:$TM_FILENAME_BASE}: React.FC = () => {",
      "\treturn$0",
      "}"
    ]
  },
  "React Functional Component With Props": {
    "scope": "typescript,typescriptreact",
    "prefix": "rfcp",
    "body": [
      "import * as React from 'react'",
      "",
      "export interface $1Props {}",
      "",
      "export const ${1:$TM_FILENAME_BASE}: React.FC<$1Props> = (props) => {",
      "\treturn$0",
      "}"
    ]
  },
  "Style Sheet": {
    "scope": "typescript,typescriptreact",
    "prefix": "ss",
    "body": [
      "import {StyleSheet} from 'react-native'",
      "",
      "const ${0:styles} = StyleSheet.create({",
      "\t$1: {",
      "\t\t$2",
      "\t}",
      "});"
    ]
  },
  "useTranslations hook": {
    "scope": "typescript,typescriptreact",
    "prefix": "utr",
    "body": ["import {useTranslation} from 'react-i18next';", "const {t} = useTranslation();$0"]
  }
}
